{"version":3,"file":"static/js/143.184ef266.chunk.js","mappings":"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","sources":["pages/HydrologicalPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PlaceAttributes from \"../assets/PlaceAttributes.json\";\nimport Hydrological_Images from \"../assets/Hydrological_Images.json\"\nimport { colors } from '@mui/material';\nimport { useSelectedFeatureContext } from '../contexts/SelectedFeatureContext';\nimport { useLoaderContext } from '../contexts/LoaderContext';\nimport { useTranslation } from 'react-i18next';\n\n\nconst HydrologicalPage = () => {\n  const { handleDistrictSelect, handleTehsilSelect, selectedDistrict, selectedTehsil, tehsilList } = useSelectedFeatureContext();\n  const { setIsLoading } = useLoaderContext();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const { t } = useTranslation();\n\n\n\n\n  useEffect(() => {\n    if (selectedTehsil && selectedTehsil !== '') {\n\n      let item = Hydrological_Images.find((item) => item.TEHSIL === selectedTehsil);\n      setSelectedImage(item);\n\n    }\n  }, [selectedTehsil]);\n\n\n\n\n  return (\n    <div className='dasboard_page_container'>\n\n      <div className='main_dashboard'>\n        <div className='left_panel'>\n          <div className=\"left_panel_container\">\n\n            <div className=' border-secondary p-2 mb-2'>\n\n              <label className=''>{t('data.select_district')}</label>\n              <select className=\"form-select mb-3\"\n                value={selectedDistrict ? selectedDistrict : ''}\n                onChange={handleDistrictSelect}>\n                <option value=\"\">{t('data.select_placeholder')}</option>\n                {[...new Set(PlaceAttributes.map((item) => item.DISTRICT))].map((item, index) =>\n                  <option key={index} value={item}>{t(`location.${item}`)}</option>\n                )}\n              </select>\n\n\n\n              <label className='mt-3'>{t('data.select_block')}</label>\n              <select className=\"form-select mb-2\"\n                value={selectedTehsil ? selectedTehsil : ''}\n                disabled={tehsilList && tehsilList.length === 0}\n                onChange={handleTehsilSelect} >\n                <option value=\"\">{t('data.select_placeholder')}</option>\n                {[...new Set(tehsilList && tehsilList.map((item) => item.TEHSIL))].map((item, index) =>\n                  <option key={index} value={item}>{t(`location.${item}`)}</option>\n                )}\n              </select>\n\n            </div>\n          </div>\n\n        </div>\n\n        <div className='right_panel'>\n          <div className='right_panel_container'>\n            {selectedImage ? (\n              <>\n                <img src={selectedImage.url} alt='Hydrological Conditions' />\n                <div className=\"para_content\">\n\n\n\n\n                  <h1>{t('hydrological.Soil')} </h1>\n                  <p>{t('hydrological.Soil_text')}\n                  </p>\n\n                  <h1>{t('hydrological.legend')}</h1>\n                  <div className='item_table_container'>\n                    <table className='item_table'>\n                      <thead>\n                        <tr>\n                          <th>{t('hydrological.dry_condition')}</th>\n                          <th>{t('hydrological.wet_condition')}</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>\n                            {t('hydrological.dry_levels', { returnObjects: true }).map((item, index) => {\n                              const styledItem = item.replace(/\\((.*?)\\)/, '<span style=\"color: red\">($1)</span>');\n                              return (\n                                <div key={index} dangerouslySetInnerHTML={{ __html: styledItem }} />\n                              );\n                            })}\n                          </td>\n                          <td>\n                            {t('hydrological.wet_levels', { returnObjects: true }).map((item, index) => {\n                              const styledItem = item.replace(/\\((.*?)\\)/, '<span style=\"color: blue\">($1)</span>');\n                              return (\n                                <div key={index} dangerouslySetInnerHTML={{ __html: styledItem }} />\n                              );\n                            })}\n                          </td>\n\n                        </tr>\n\n                      </tbody>\n                    </table>\n                  </div>\n\n                </div>\n\n              </>\n            ) : (\n              <p>\n                {t('data.select_location_placeholder')}\n              </p>\n            )}\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default HydrologicalPage"],"names":["HydrologicalPage","handleDistrictSelect","handleTehsilSelect","selectedDistrict","selectedTehsil","tehsilList","useSelectedFeatureContext","setIsLoading","useLoaderContext","selectedImage","setSelectedImage","useState","t","useTranslation","useEffect","item","Hydrological_Images","find","TEHSIL","_jsx","className","children","_jsxs","value","onChange","Set","PlaceAttributes","map","DISTRICT","index","concat","disabled","length","_Fragment","src","url","alt","returnObjects","styledItem","replace","dangerouslySetInnerHTML","__html"],"sourceRoot":""}